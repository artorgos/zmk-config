/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/backlight.h>
 
 #define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer
 
 / {
     behaviors {
         pht: positional_hold_tap {
             compatible = "zmk,behavior-hold-tap";
             #binding-cells = <2>;
             flavor = "hold-preferred";
             tapping-term-ms = <100>;
             quick-tap-ms = <50>;
             bindings = <&kp>, <&kp>;
             hold-trigger-key-positions = <1>;    // <---[[the W key]]
         };
         bhm: balanced_homerow_mods {
             compatible = "zmk,behavior-hold-tap";
             #binding-cells = <2>;
             tapping-term-ms = <100>;    // <---[[moderate duration]]
             quick-tap-ms = <0>;
             flavor = "balanced";
             bindings = <&kp>, <&kp>;
         };
         mo_tog: behavior_mo_tog {
             compatible = "zmk,behavior-hold-tap";
             #binding-cells = <2>;
             flavor = "hold-preferred";
             tapping-term-ms = <100>;
             bindings = <&mo>, <&tog>;
         };
         lt {
             tapping-term-ms = <100>;
         };
         td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RIGHT_SHIFT>, <&kp CAPSLOCK>;
        };
        td_comilla: tap_dance_mod_comilla {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp GRAVE>;
        };
     };
         keymap {
                 compatible = "zmk,keymap";
 
                 default_layer {
 // -----------------------------------------------------------------------------------------
 // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
 // | LEFT SHIFT & TAB |  A  |  O  |  E  |  U  |  I  |   |  D  |   H  |  T  |  N  |  S  |  '   |
 // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
 //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                         bindings = <
    &kp ESC   &td_comilla &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
    &pht LEFT_SHIFT TAB &kp A &kp O &kp E &kp U &kp I   &kp D &kp H  &kp T     &kp N   &kp S &td_mt
    &bhm LCTRL LGUI &kp SEMICOLON &kp Q &kp J &kp K &kp X   &kp B &kp M  &kp W &kp V &kp Z &kp MINUS
                   &kp LALT &lt 1 DEL  &lt 4 SPACE   &kp SPACE &lt 2 ENTER    &kp RALT
                         >;
                 };
//CAPA MO 1
                lower_layer {
 // -----------------------------------------------------------------------------------------
 // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  *  |  7  |  8  |  9  |  0  | BSPC |
 // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
 // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
 //                    | GUI |     | SPC |   | ENT |     | ALT |
                 bindings = <
 &kp ESC    &kp EXCL       &kp AT_SIGN       &kp HASH       &kp DOLLAR       &kp PERCENT         &kp KP_MULTIPLY   &kp N7   &kp N8 &kp N9    &kp MINUS &kp BSPC
 &pht LEFT_SHIFT TAB  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp KP_DIVIDE  &kp N4  &kp N5  &kp N6  &kp KP_PLUS  &kp RIGHT_SHIFT
 &bhm LCTRL LGUI  &kp LBKT  &kp RBKT  &kp EQUAL  &kp SLASH  &kp BSLH  &none  &kp N1  &kp N2  &kp N3  &kp KP_ENTER  &none
                                         &kp LALT  &none  &lt 4 SPACE  &kp SPACE  &lt 3 DEL  &kp N0
                 >;
         };
         //CAPA MO2
                raise_layer {
                         bindings = <
&kp ESC &kp TILDE &kp BSLH &kp EXCLAMATION &kp QUESTION &kp PIPE  &none &kp HOME  &kp UP &kp END &none &kp BSPC
&pht LEFT_SHIFT TAB &rgb_ug RGB_TOG   &none &none   &none   &none   &none &kp LEFT &kp DOWN  &kp RIGHT &none &kp RIGHT_SHIFT
&bhm LCTRL LGUI   &kp Z &kp X   &kp C   &kp V  &kp B &none  &kp PSCRN  &none   &none    &none     &none
&kp LALT &lt 3 DEL   &lt 4 SPACE   &kp SPACE   &none    &kp RALT
                         >;
                 };
            // CAPA MO3
                 tuner_layer {
                         bindings = <
&none &none  &none  &none  &none  &none            &none  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none  &none
&none &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_TOG  &none  &none            &none  &none  &kp C_PLAY_PAUSE  &none  &none  &none
&none &bl BL_ON  &bl BL_OFF  &bl BL_TOG  &none  &none            &none  &none  &none  &none  &none  &none
&kp LALT &none &lt 4 SPACE                              &kp SPACE &none  &kp RALT
                         >;
                 };
        //CAPA MO4
                 fn_layer {
 // -----------------------------------------------------------------------------------------
 // |  TAB |  F1  |  F2  |  F3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
 // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
 // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
 //                    | GUI |     | SPC |   | ENT |     | ALT |
                         bindings = <
    &kp TAB    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &kp BSPC
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none &none &none &kp F11 &kp F12 &none
    &rgb_ug RGB_ON  &rgb_ug RGB_OFF       &sys_reset       &none       &none       &none         &none   &none   &none &none    &none &none
                                     &kp LALT     &none       &none      &none  &none   &kp RALT
                         >;
                 };
         };
 };
